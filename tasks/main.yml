---

### Maven
- name: 'make sure directory for Maven exists'
  file: dest={{ maven_home }} state=directory owner=root group=root mode=0755
  tags:
    - maven

- name: 'verify presence of maven'
  stat: path={{ maven_home }}/bin/mvn
  register: mvn_installed
  when: features.maven
  tags:
    - maven

- name: 'unarchive maven'
  unarchive:
    src: "{{  maven_url }}"
    dest: "{{  maven_location }}"
    copy: no
  retries: 3
  when: features.maven and not mvn_installed.stat.exists
  tags:
    - maven

- name: 'fix maven permissions'
  file:  dest={{ maven_home }}/{{item}}
         state=directory mode=0755
  with_items:
    - bin
    - boot
  when: features.maven
  tags:
    - maven

- name: 'make sure .m2 directory exists'
  file: path={{ maven_location }}/.m2 owner=root group=root mode=0750 state=directory
  when: features.maven
  tags:
    - maven

- name: 'make sure /root/.m2 directory exists'
  file: path=/root/.m2 owner=root group=root mode=0750 state=directory
  when: features.maven
  tags:
    - maven

- name: 'set java_top on Debian'
  become: yes
  set_fact:
    java8_top: '/usr/lib/jvm/'
  when: ansible_os_family == 'Debian'
  tags:
    - maven
    - maven_test
    - test

- name: 'set java_top on RedHat'
  become: yes
  set_fact:
    java8_top: '/usr/java/jvm'
  when: ansible_os_family == 'RedHat'
  tags:
    - maven
    - maven_test
    - test

- name: 'this is JAVA_HOME'
  set_fact:
    java8_home: "{{ java8_top }}/{{ java8_name }}"
  tags:
    - maven
    - maven_test
    - test

- name: 'this is JAVA_HOME'
  debug:
    msg: "JAVA_HOME={{ java8_home }}"
  tags:
    - maven
    - maven_test
    - test

- name: 'Test for presence of maven'
  environment:
    JAVA_HOME: "{{ java8_home }}"
  stat: path={{ maven_home }}/bin/mvn
  tags:
    - maven
    - maven_test
    - test

- name: 'Test running maven --version'
  environment:
    JAVA_HOME: "{{ java8_home }}"
  command: "{{ maven_home }}/bin/mvn --version"
  changed_when: no
  tags:
    - maven
    - maven_test
    - test

- name: 'check if settings-security has been set'
  environment:
    JAVA_HOME: "{{ java8_home }}"
  stat:
    path: "{{ ant_base }}/{{ ant_name }}/bin/ant"
  register: maven_setting_installed
  tags:
    - maven
    - maven_test
    - test

- name: 'create master password for Maven'
  become: yes
  environment:
    JAVA_HOME: "{{ java8_home }}"
  command: "{{ maven_home }}/bin/mvn --encrypt-master-password {{ mvn_master_password}}"
  register: encrypted_mvn_password
  when: features.maven and not maven_setting_installed
  tags:
    - maven

- name: 'install settings-security.xml'
  become: yes
  template: src=settings-security-xml.j2 dest=/root/.m2/settings-security.xml mode=0600 owner=root group=root
  when: features.maven and not maven_setting_installed
  tags:
    - maven

- name: 'create repository password for Maven'
  become: yes
  environment:
    JAVA_HOME: "{{ java8_home }}"
  command: "{{ maven_home }}/bin/mvn --encrypt-password {{ mvn_repo_password}}"
  register: mvn_repository_password
  when: features.maven and not maven_setting_installed
  tags:
    - maven

- name: 'create settings.xml'
  become: yes
  template: src=settings_xml.j2 dest={{ maven_location }}/.m2/settings.xml
            owner=root mode=0644
  tags:
    - config
    - maven
  when: features.maven and not maven_setting_installed

- name: 'install /etc/profile.d/maven.sh'
  template: src=etc-profile-d-maven-sh.j2 dest=/etc/profile.d/maven.sh
          owner=root group=root mode=0644
  when: features.maven
  tags:
    - maven

- name: 'make sure maven directory is absent'
  file: dest={{ maven_home }} state=absent
  when: not features.maven
  tags:
    - maven


